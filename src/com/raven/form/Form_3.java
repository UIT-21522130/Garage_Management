/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import DAL.DBConnection;
import DTO.UserLoginDTO;
import GUI.RepairGUI;
import java.awt.Color;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAVEN
 */
public class Form_3 extends javax.swing.JPanel {

    /**
     * Creates new form Form_1
     */
    DBConnection a = new DBConnection();
    Connection conn ;
    DefaultTableModel tbn = new DefaultTableModel();
    long sotienthu = 0L;
    UserLoginDTO dtoUserLogin = null;
    
    public Form_3() {
        initComponents();
            this.setVisible(true);
            this.setSize(1000, 600);
            ConnectDB();
            txtHoten.setEditable(false);
            txtDienthoai.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Jpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableBill = new javax.swing.JTable();
        Ngaythutien = new com.toedter.calendar.JDateChooser();
        txtEmail = new javax.swing.JTextField();
        txtSotienthu = new javax.swing.JTextField();
        txtDienthoai = new javax.swing.JTextField();
        txtHoten = new javax.swing.JTextField();
        BienSoXe = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 242, 242));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Jpanel.setBackground(new java.awt.Color(176, 196, 222));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setText("Họ tên chủ xe:");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setText("Điện thoại:");

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Ngày thu tiền:");

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setText("Biển số: ");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setText("Email: ");

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setText("Số tiền thu:");

        tableBill.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tableBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số phiếu", "Họ tên chủ xe", "Điện thoại", "Ngày thu tiền", "Biển số", "Email", "Số tiền thu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBill.setCursor(new java.awt.Cursor(java.awt.Cursor.SW_RESIZE_CURSOR));
        tableBill.setRowHeight(40);
        tableBill.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tableBillAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tableBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBillMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableBill);

        Ngaythutien.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        Ngaythutien.setPreferredSize(new java.awt.Dimension(119, 29));

        txtEmail.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(204, 204, 204));
        txtEmail.setText("Nhập địa chỉ email");
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });

        txtSotienthu.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtSotienthu.setForeground(new java.awt.Color(255, 255, 255));
        txtSotienthu.setText("Nhập số tiền thu");
        txtSotienthu.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                txtSotienthuHierarchyChanged(evt);
            }
        });
        txtSotienthu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSotienthuFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSotienthuFocusLost(evt);
            }
        });
        txtSotienthu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSotienthuActionPerformed(evt);
            }
        });

        txtDienthoai.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtDienthoai.setForeground(new java.awt.Color(204, 204, 204));
        txtDienthoai.setText("Nhập số điện thoại");
        txtDienthoai.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDienthoaiFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDienthoaiFocusLost(evt);
            }
        });
        txtDienthoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDienthoaiActionPerformed(evt);
            }
        });

        txtHoten.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtHoten.setForeground(new java.awt.Color(204, 204, 204));
        txtHoten.setText("Nhập họ tên");
        txtHoten.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                txtHotenHierarchyChanged(evt);
            }
        });
        txtHoten.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHotenFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHotenFocusLost(evt);
            }
        });

        BienSoXe.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        BienSoXe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        BienSoXe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BienSoXeItemStateChanged(evt);
            }
        });
        BienSoXe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BienSoXeMouseClicked(evt);
            }
        });
        BienSoXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BienSoXeActionPerformed(evt);
            }
        });

        btnThem.setBackground(new java.awt.Color(255, 255, 255));
        btnThem.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setMaximumSize(new java.awt.Dimension(55, 31));
        btnThem.setMinimumSize(new java.awt.Dimension(55, 31));
        btnThem.setPreferredSize(new java.awt.Dimension(55, 31));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 255, 255));
        btnSua.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setMaximumSize(new java.awt.Dimension(55, 31));
        btnSua.setMinimumSize(new java.awt.Dimension(55, 31));
        btnSua.setPreferredSize(new java.awt.Dimension(55, 31));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setMaximumSize(new java.awt.Dimension(55, 31));
        btnXoa.setMinimumSize(new java.awt.Dimension(55, 31));
        btnXoa.setPreferredSize(new java.awt.Dimension(55, 31));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXoa1.setBackground(new java.awt.Color(255, 255, 255));
        btnXoa1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        btnXoa1.setText("Làm mới");
        btnXoa1.setMaximumSize(new java.awt.Dimension(55, 31));
        btnXoa1.setMinimumSize(new java.awt.Dimension(55, 31));
        btnXoa1.setPreferredSize(new java.awt.Dimension(55, 31));
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JpanelLayout = new javax.swing.GroupLayout(Jpanel);
        Jpanel.setLayout(JpanelLayout);
        JpanelLayout.setHorizontalGroup(
            JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanelLayout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 37, Short.MAX_VALUE)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 38, Short.MAX_VALUE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JpanelLayout.createSequentialGroup()
                        .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JpanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHoten)
                            .addComponent(txtDienthoai, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Ngaythutien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JpanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JpanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSotienthu, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BienSoXe, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12))
            .addComponent(jScrollPane2)
        );
        JpanelLayout.setVerticalGroup(
            JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(BienSoXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDienthoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSotienthu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Ngaythutien, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel4.setBackground(new java.awt.Color(176, 196, 222));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setText("Phiếu thu tiền");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Jpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableBillAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tableBillAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tableBillAncestorAdded

    private void tableBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBillMouseClicked
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            DefaultTableModel model = (DefaultTableModel) tableBill.getModel();
            int selectedrowindex = tableBill.getSelectedRow();
            txtHoten.setText(model.getValueAt(selectedrowindex, 1).toString());
            txtHoten.setForeground(new Color(0,0,0));
            txtDienthoai.setText(model.getValueAt(selectedrowindex, 2).toString());
            txtDienthoai.setForeground(new Color(0,0,0));
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(selectedrowindex, 3));
            Ngaythutien.setDate(date);
            BienSoXe.setSelectedItem(model.getValueAt(selectedrowindex, 4));
            txtEmail.setText(model.getValueAt(selectedrowindex, 5).toString());
            txtEmail.setForeground(new Color(0,0,0));
            txtSotienthu.setText(model.getValueAt(selectedrowindex, 6).toString());
            txtSotienthu.setForeground(new Color(0,0,0));
            
        } catch (ParseException | SQLException ex) {
            Logger.getLogger(RepairGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tableBillMouseClicked

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        if(txtEmail.getText().equals("Nhập địa chỉ email"))
        {
            txtEmail.setText("");
            txtEmail.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtEmailFocusGained

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        String email = txtEmail.getText();
    if (email.equals("")) {
        txtEmail.setText("Nhập địa chỉ email");
        txtEmail.setForeground(new Color(204, 204, 204));
    } else {
        // Kiểm tra định dạng email bằng biểu thức chính quy
        String emailRegex = "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$";
        boolean isValid = email.matches(emailRegex);

        if (!isValid) {
            // Địa chỉ email không hợp lệ
            // Thực hiện hành động phù hợp, ví dụ: hiển thị thông báo lỗi
            JOptionPane.showMessageDialog(this, "Địa chỉ email không hợp lệ!");
            // Xóa nội dung trong textbox để người dùng nhập lại
            txtEmail.setText("");
            // Đặt màu chữ mặc định
            txtEmail.setForeground(Color.BLACK);
        }
    }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtSotienthuHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_txtSotienthuHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSotienthuHierarchyChanged

    private void txtSotienthuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSotienthuFocusGained
        if(txtSotienthu.getText().equals("Nhập số tiền thu"))
        {
            txtSotienthu.setText("");
            txtSotienthu.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtSotienthuFocusGained

    private void txtSotienthuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSotienthuFocusLost
        String value = txtSotienthu.getText();
    if (!value.isEmpty()) {
        try {
            double amount = Double.parseDouble(value);
            if (amount <= 0) {
                // Số tiền thu không được nhỏ hơn 0
                JOptionPane.showMessageDialog(this, "Số tiền thu không hợp lệ!");
                // Xóa nội dung trong textbox để người dùng nhập lại
                txtSotienthu.setText("");
                // Đặt màu chữ mặc định
                txtSotienthu.setForeground(Color.BLACK);
            }
        } catch (NumberFormatException e) {
            // Nếu giá trị nhập vào không phải là số, xử lý lỗi tương ứng
            JOptionPane.showMessageDialog(this, "Vui lòng nhập một số hợp lệ!");
            // Xóa nội dung trong textbox để người dùng nhập lại
            txtSotienthu.setText("");
            // Đặt màu chữ mặc định
            txtSotienthu.setForeground(Color.BLACK);
        }
    }
    }//GEN-LAST:event_txtSotienthuFocusLost

    private void txtDienthoaiFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDienthoaiFocusGained
        if(txtDienthoai.getText().equals("Nhập số điện thoại"))
        {
            txtDienthoai.setText("");
            txtDienthoai.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtDienthoaiFocusGained

    private void txtDienthoaiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDienthoaiFocusLost
        if(txtDienthoai.getText().equals(""))
        {
            txtDienthoai.setText("Nhập số điện thoại");
            txtDienthoai.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_txtDienthoaiFocusLost

    private void txtDienthoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDienthoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDienthoaiActionPerformed

    private void txtHotenHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_txtHotenHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHotenHierarchyChanged

    private void txtHotenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHotenFocusGained
        if(txtHoten.getText().equals("Nhập họ tên"))
        {
            txtHoten.setText("");
            txtHoten.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_txtHotenFocusGained

    private void txtHotenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHotenFocusLost
        if(txtHoten.getText().equals(""))
        {
            txtHoten.setText("Nhập họ tên");
            txtHoten.setForeground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_txtHotenFocusLost

    private void BienSoXeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BienSoXeItemStateChanged
                try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            DefaultTableModel model = (DefaultTableModel) tableBill.getModel();
            String sql = "CALL P_BSX_Com2(?)";
            PreparedStatement st = conn.prepareStatement(sql);
            st.setString(1, (String)BienSoXe.getSelectedItem());
            ResultSet rs = st.executeQuery();
            while (rs.next())
            {
                txtHoten.setText(rs.getString("TenChuXe"));
                txtHoten.setForeground(new Color(0,0,0));
                txtDienthoai.setText(Integer.toString(rs.getInt("DienThoai")));
                txtDienthoai.setForeground(new Color(0,0,0));
                txtEmail.setText(rs.getString("Email"));
                txtEmail.setForeground(new Color(0,0,0));
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(RepairGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BienSoXeItemStateChanged

    private void BienSoXeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BienSoXeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BienSoXeMouseClicked

    private void BienSoXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BienSoXeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BienSoXeActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
       
    if(checkoverwritten_bill() == 0){
        insertHOADON();
        resetForm();
        ConnectDB();
    }
    else 
    {
        JOptionPane.showMessageDialog(this, "Bạn không được phép nhập trùng thông tin với Biển số xe và ngày thu tiền");
    }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (checkoverwritten()== 1) 
        {
        
            updateHoadon();
            resetForm();
        } else 
        {
            JOptionPane.showMessageDialog(this, "Không được sửa thành thông tin trùng Biển số xe và Ngày thu tiền!");
        }        

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        deleteHoadon ();
        resetForm();
        ConnectDB();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
       resetForm();
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void txtSotienthuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSotienthuActionPerformed
        String sl = txtSotienthu.getText();
        if(sl.equals("0")){
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng lớn hơn 0");
            txtSotienthu.setText("");
        }
    }//GEN-LAST:event_txtSotienthuActionPerformed
    
    public void updateBienSoXe()
    {       
        try {     
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "Select * from xe";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            while(rs.next())
            {
                BienSoXe.addItem(rs.getString("BienSo"));
            }
        } catch (Exception e) {
        }   
    }
    
    private void deleteHoadon() {
        ResultSet rs ;    
        try{
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            java.util.Date utilStartDate = Ngaythutien.getDate();
            java.sql.Date date = new java.sql.Date(utilStartDate.getTime());
            PreparedStatement ps = null;
            PreparedStatement statement = conn.prepareCall("{call P_Bill_Delete(?, ?, ?)}");

            statement.setString(1, getSelectedValue(BienSoXe));
            statement.setDate(2, date); 
            statement.setString(3, txtEmail.getText());
            if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá không?","Confirm",
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            statement.executeQuery();
            rs = statement.getGeneratedKeys();
            int generatedKey = 0;
            if (rs.next()) {
                generatedKey = rs.getInt(1);
            }}
                statement.close();
                conn.close();
//            return generatedKey;
        } catch (Exception ex) {}


    }
    
    public String getSelectedValue(JComboBox comboBox) {
    Object selectedItem = comboBox.getSelectedItem();
    if (selectedItem != null) {
        String selectedValue = selectedItem.toString();
        return selectedValue;
    } else {
        return null;
    }
    }
    
    public void resetForm()
    {
        txtHoten.setText("");
        Ngaythutien.setDate(null);
        txtDienthoai.setText("");
        BienSoXe.setSelectedIndex(0);
        txtEmail.setText("");
        txtSotienthu.setText("");
    }
    
    public void ConnectDB() //load data to table
    {    
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "CALL P_show_Bill()";         
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tableBill.getModel();
            model.setRowCount(0);
            while (rs.next()){
                Object objList[] = {rs.getString("SoPhieu"), rs.getString("TenChuXe"), rs.getString("Phon3"), rs.getString("NgayThu"), 
                    rs.getString("BienSo"), rs.getString("Email"), rs.getString("SoTienThu")};
                model.addRow(objList);
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(RepairGUI.class.getName()).log(Level.SEVERE, null, ex);
        }     

    }
    
    public int insertHOADON() {
        CallableStatement st;
        ResultSet rs;
        int output = 0;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            java.util.Date utilStartDate = Ngaythutien.getDate();
            java.sql.Date date = new java.sql.Date(utilStartDate.getTime());
            String sql = "call P_Bill_Insert(?,?,?,?,?)";
            st = conn.prepareCall(sql);
            st.setString(1, getSelectedValue(BienSoXe));
            st.setDate(2, date);
            st.setFloat(3, getFloatValueFromTextField(txtSotienthu));
            st.setString(4, txtEmail.getText());
            st.registerOutParameter(5, java.sql.Types.INTEGER);
//            st.executeQuery();
            st.executeUpdate();
            output = st.getInt(5);
            rs = st.getGeneratedKeys();
            int generatedKey = 0;
            if (rs.next()) {
                generatedKey = rs.getInt(1);
            }
                st.close();
                conn.close();
            if(output == 2){
                JOptionPane.showMessageDialog(null,"Không được thu số tiền lớn hơn số tiền sửa chữa!");
                return -1;
            }  
            if(output == 3){
                JOptionPane.showMessageDialog(null,"Số tiền thu phải lớn hơn 0");
                return -1;
            }
            
            if(output == 0 ){
                JOptionPane.showMessageDialog(null,"Không được phép thêm ngày thu tiền nhỏ hơn ngày sửa chữa!");
            }
            else
            {
            JOptionPane.showMessageDialog(null, "Thêm thành công!");
        }
            return generatedKey;
        } catch (Exception ex) {
        }
            return 0;


        }
    
    public float getFloatValueFromTextField(JTextField textField) {
    String text = textField.getText();
    float floatValue = 0.0f; // giá trị mặc định nếu không thể chuyển đổi chuỗi thành số thực

    try {
        floatValue = Float.parseFloat(text);
    } catch (NumberFormatException e) {
        // Xử lý ngoại lệ nếu không thể chuyển đổi chuỗi thành số thực

    }
    return floatValue;
    }
    
    public int checkoverwritten_bill()
    {
        int count = 0;
        try {
            
            Connection conn;
            PreparedStatement st;
            ResultSet rs;
            java.util.Date utilStartDate = Ngaythutien.getDate();
            java.sql.Date date2 = new java.sql.Date(utilStartDate.getTime());
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "Call P_Checkoverwritten_Bill_Add(?,?)";
            st = conn.prepareStatement(sql);
            st.setString(1, getSelectedValue(BienSoXe));
            st.setDate(2, date2);
            rs = st.executeQuery();
            while (rs.next())
            {
                count = rs.getInt("DEM");
            }
                      
        } catch (SQLException ex) {
            Logger.getLogger(RepairGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return count;  
    }
    
    public int checkoverwritten()
    {
        {
        int outputValue = 0;
        try {
            Connection conn;
            CallableStatement st;
            ResultSet rs;
            java.util.Date utilStartDate = Ngaythutien.getDate();
            java.sql.Date date2 = new java.sql.Date(utilStartDate.getTime());
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "CALL P_Checkoverwritten_Bill(?,?,?,?)";
            st = conn.prepareCall(sql);
            String stt = (String) tableBill.getModel().getValueAt(tableBill.getSelectedRow(), 0);
            st.setInt(1,Integer.valueOf(stt));
            st.setString(2, getSelectedValue(BienSoXe));
            st.setDate(3, date2);
//            st.setString(4, NoidungSC.getText());
            st.registerOutParameter(4, java.sql.Types.INTEGER);
            rs = st.executeQuery();
            outputValue = st.getInt(4);
        } catch (SQLException ex) {
            Logger.getLogger(RepairGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return outputValue;  
        }
    }

    public int updateHoadon()
        {
            int output = 0;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            java.util.Date utilStartDate = Ngaythutien.getDate();
            java.sql.Date date = new java.sql.Date(utilStartDate.getTime());
            int selectedRow = tableBill.getSelectedRow();
            if (selectedRow >= 0) {
                CallableStatement statement = conn.prepareCall("{call P_Bill_Update(?,?,?,?,?,?)}");
                String stt = (String) tableBill.getModel().getValueAt(tableBill.getSelectedRow(), 0);
                statement.setInt(1,Integer.valueOf(stt));
                statement.setString(2, getSelectedValue(BienSoXe));
                statement.setDate(3, date);
                statement.setFloat(4, getFloatValueFromTextField(txtSotienthu));
                statement.setString(5, txtEmail.getText());
                statement.registerOutParameter(6, java.sql.Types.INTEGER);
                statement.executeUpdate();
                output = statement.getInt(6);
                tbn.setRowCount(0);
                ConnectDB();
            if(output == 2){
                JOptionPane.showMessageDialog(null,"Không được sửa tiền thu lớn hơn tiền sửa chữa!");
                return -1;
            }
            if(output == 3){
                JOptionPane.showMessageDialog(null,"Không được update số tiền thu bằng 0!");
                return -1;
            }
            if(output == 0){
                JOptionPane.showMessageDialog(null,"Không được phép sửa ngày sửa chữa nhỏ hơn ngày tiếp nhận!");
            }
            else
            {
            JOptionPane.showMessageDialog(null, "Sửa thành công!");
        }
            } else {
                JOptionPane.showMessageDialog(null, "Chọn một dòng để sửa!");
            }
        } catch (Exception ex) {
            System.out.println(ex.toString());
            JOptionPane.showMessageDialog(null, "Error updating data: " + ex.getMessage());
        }
        return output;
    }
    
    public void updateComboBoxBSX()
    {
        Connection conn; 
       
        try {     
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "Select DISTINCT(BienSo) from phieusuachua order by BienSo";
            PreparedStatement st = conn.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            while(rs.next())
            {
                BienSoXe.addItem(rs.getString("BienSo"));
            }
        } catch (Exception e) {
        }
    }
    
    public void resetform()
    {
        BienSoXe.removeAllItems();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BienSoXe;
    private javax.swing.JPanel Jpanel;
    private com.toedter.calendar.JDateChooser Ngaythutien;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableBill;
    private javax.swing.JTextField txtDienthoai;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoten;
    private javax.swing.JTextField txtSotienthu;
    // End of variables declaration//GEN-END:variables
}
