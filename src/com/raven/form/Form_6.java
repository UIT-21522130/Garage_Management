/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import DAL.DBConnection;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAVEN
 */
public class Form_6 extends javax.swing.JPanel {

    /**
     * Creates new form Form_1
     */
    DBConnection a=new DBConnection();
    Connection conn= a.ConnectDb();
    DefaultTableModel model =new DefaultTableModel();
    int slTienCong = 0;
    int count_row = 0;
    public Form_6() {
        initComponents();
        ThemHieuXe.setEnabled(false);
        XoaHieuXe.setEnabled(false);
        findWage();
        findCarBrand();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hieu_xe = new javax.swing.JTable();
        TimHieuXe = new javax.swing.JButton();
        ten_hieu_xe_txt = new javax.swing.JTextField();
        ThemHieuXe = new javax.swing.JButton();
        SuaHieuXe = new javax.swing.JButton();
        XoaHieuXe = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tien_cong = new javax.swing.JTable();
        TimTC = new javax.swing.JButton();
        XoaTC = new javax.swing.JButton();
        ThemTC = new javax.swing.JButton();
        SuaTC = new javax.swing.JButton();
        ten_tien_cong_txt = new javax.swing.JTextField();
        gia_tien_cong_txt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(176, 196, 222));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        hieu_xe.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        hieu_xe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hiệu xe", "Tên hiệu xe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hieu_xe.setRowHeight(30);
        hieu_xe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hieu_xeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(hieu_xe);

        TimHieuXe.setBackground(new java.awt.Color(255, 255, 255));
        TimHieuXe.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        TimHieuXe.setText("Tìm");
        TimHieuXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimHieuXeActionPerformed(evt);
            }
        });

        ten_hieu_xe_txt.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        ten_hieu_xe_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ten_hieu_xe_txtActionPerformed(evt);
            }
        });

        ThemHieuXe.setBackground(new java.awt.Color(255, 255, 255));
        ThemHieuXe.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        ThemHieuXe.setText("Thêm");
        ThemHieuXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemHieuXeActionPerformed(evt);
            }
        });

        SuaHieuXe.setBackground(new java.awt.Color(255, 255, 255));
        SuaHieuXe.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        SuaHieuXe.setText("Sửa");
        SuaHieuXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaHieuXeActionPerformed(evt);
            }
        });

        XoaHieuXe.setBackground(new java.awt.Color(255, 255, 255));
        XoaHieuXe.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        XoaHieuXe.setText("Xoá");
        XoaHieuXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaHieuXeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setText("Nhập tên hiệu xe");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ten_hieu_xe_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ThemHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TimHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(XoaHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SuaHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ten_hieu_xe_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(TimHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ThemHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(XoaHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SuaHieuXe, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Hiệu xe", jPanel3);

        jPanel2.setPreferredSize(new java.awt.Dimension(990, 500));

        tien_cong.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        tien_cong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã tiền công", "Tên tiền công", "Giá tiền công"
            }
        ));
        tien_cong.setRowHeight(30);
        tien_cong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tien_congMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tien_cong);

        TimTC.setBackground(new java.awt.Color(255, 255, 255));
        TimTC.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        TimTC.setText("Tìm");
        TimTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimTCActionPerformed(evt);
            }
        });

        XoaTC.setBackground(new java.awt.Color(255, 255, 255));
        XoaTC.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        XoaTC.setText("Xoá");
        XoaTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaTCActionPerformed(evt);
            }
        });

        ThemTC.setBackground(new java.awt.Color(255, 255, 255));
        ThemTC.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        ThemTC.setText("Thêm");
        ThemTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemTCActionPerformed(evt);
            }
        });

        SuaTC.setBackground(new java.awt.Color(255, 255, 255));
        SuaTC.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        SuaTC.setText("Sửa");
        SuaTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaTCActionPerformed(evt);
            }
        });

        gia_tien_cong_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gia_tien_cong_txtActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel2.setText("Nhập tên tiền công");

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel4.setText("Nhập giá tiền công");

        jLabel15.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel15.setText("VND");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ten_tien_cong_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(gia_tien_cong_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ThemTC, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimTC, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(XoaTC, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SuaTC, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15)
                    .addComponent(ten_tien_cong_txt, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(gia_tien_cong_txt))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(TimTC, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ThemTC, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(XoaTC, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SuaTC, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jTabbedPane1.addTab("Tiền công", jPanel2);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Quản lý");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 915, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TimHieuXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimHieuXeActionPerformed
        // TODO add your handling code here:
        findCarBrand();
    }//GEN-LAST:event_TimHieuXeActionPerformed

    private void ten_hieu_xe_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ten_hieu_xe_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ten_hieu_xe_txtActionPerformed

    private void ThemHieuXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemHieuXeActionPerformed
        // TODO add your handling code here:
        insertCarBrand();
        ten_hieu_xe_txt.setText("");
        findCarBrand();
    }//GEN-LAST:event_ThemHieuXeActionPerformed

    private void SuaHieuXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaHieuXeActionPerformed
        // TODO add your handling code here:
        if (ten_hieu_xe_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Thông tin bị thiếu, vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            int x = -1;
            x = hieu_xe.getSelectedRow();
            if (x == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng cần sửa, sau đó sửa tên hiệu xe.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int dem = checkOverwrittenCarBrand();
            System.out.println(dem);
            if (dem != 0) {
                JOptionPane.showMessageDialog(this, "Tên hiệu xe bị trùng lặp, vui lòng sửa lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                updateCarBrand();
                JOptionPane.showMessageDialog(this, "Sửa hiệu xe thành công!");
                ten_hieu_xe_txt.setText("");
            }
        }
        findCarBrand();
    }//GEN-LAST:event_SuaHieuXeActionPerformed

    private void XoaHieuXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaHieuXeActionPerformed
        // TODO add your handling code here:
        try{
            deleteCarBrand();
            ten_hieu_xe_txt.setText("");
            findCarBrand();
        }
        catch (NumberFormatException ex){
        }
    }//GEN-LAST:event_XoaHieuXeActionPerformed

    private void TimTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimTCActionPerformed
        // TODO add your handling code here:
        findWage();
    }//GEN-LAST:event_TimTCActionPerformed

    private void XoaTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaTCActionPerformed
        // TODO add your handling code here:
        try{
            deleteWage();
            ten_tien_cong_txt.setText("");
            gia_tien_cong_txt.setText("");
            findWage();
        }
        catch (NumberFormatException ex){
        }
    }//GEN-LAST:event_XoaTCActionPerformed

    private void ThemTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemTCActionPerformed
        // TODO add your handling code here:
        System.out.println("count_row : "+ count_row + "slTienCong:"+ slTienCong);
        if(count_row >= slTienCong) {
            JOptionPane.showMessageDialog(this, "Vượt quá số lượng tiền công cho phép");
            ten_tien_cong_txt.setText("");
            gia_tien_cong_txt.setText("");
            return;
        }else{ 
            if (ten_tien_cong_txt.getText().equals("")||gia_tien_cong_txt.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Thông tin bị thiếu, vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                Pattern pattern = Pattern.compile("\\d*");
                Matcher matcher = pattern.matcher(gia_tien_cong_txt.getText());
                if (matcher.matches()) {
                    int dem = checkOverwrittenWage();
                    System.out.println(dem);
                    if (dem != 0) {
                        JOptionPane.showMessageDialog(this, "Tên tiền công bị trùng lặp, vui lòng sửa lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else {
                        insertWage();
                        ten_tien_cong_txt.setText("");
                        gia_tien_cong_txt.setText("");
                        JOptionPane.showMessageDialog(this, "Thêm tiền công thành công!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Vui lòng CHỈ nhập số vào giá tiền công.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
        findWage();
    }//GEN-LAST:event_ThemTCActionPerformed

    private void SuaTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaTCActionPerformed
        // TODO add your handling code here:
        if (ten_tien_cong_txt.getText().equals("")||gia_tien_cong_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Thông tin bị thiếu, vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            Pattern pattern = Pattern.compile("\\d*");
            Matcher matcher = pattern.matcher(gia_tien_cong_txt.getText());
            if (matcher.matches()) {
                int x = -1;
                x = tien_cong.getSelectedRow();
                if (x == -1) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng cần sửa, sau đó sửa các thông tin của tiền công.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                int dem = checkOverwrittenWage();
                System.out.println(dem);
                if (dem >= 2) {
                    JOptionPane.showMessageDialog(this, "Tên tiền công bị trùng lặp, vui lòng sửa lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    updateWage();
                    ten_tien_cong_txt.setText("");
                    gia_tien_cong_txt.setText("");
                    JOptionPane.showMessageDialog(this, "Sửa tiền công thành công!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chỉ nhập SỐ DƯƠNG vào giá tiền công", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        findWage();
    }//GEN-LAST:event_SuaTCActionPerformed

    private void gia_tien_cong_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gia_tien_cong_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gia_tien_cong_txtActionPerformed

    private void hieu_xeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hieu_xeMouseClicked
        int x = hieu_xe.getSelectedRow();
        ten_hieu_xe_txt.setText((String) hieu_xe.getValueAt(x, 1));
    }//GEN-LAST:event_hieu_xeMouseClicked

    private void tien_congMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tien_congMouseClicked
        int x = tien_cong.getSelectedRow();
        ten_tien_cong_txt.setText((String) tien_cong.getValueAt(x, 1));
        gia_tien_cong_txt.setText(tien_cong.getValueAt(x, 2).toString());
    }//GEN-LAST:event_tien_congMouseClicked

    private void id_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_txtActionPerformed
    
    public void findWage() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");     
            PreparedStatement st = conn.prepareStatement("CALL findWage(?)");
            st.setString(1, ten_tien_cong_txt.getText());
            ResultSet rs = st.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tien_cong.getModel();
            model.setRowCount(0);
            while (rs.next()){    
                Object objList[] = {rs.getInt("MaTC"), rs.getString("TenTC"), rs.getString("GiaTien")};
                model.addRow(objList);
            }
            count_row = model.getRowCount();
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }
    
    public void findCarBrand() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");     
            PreparedStatement st = conn.prepareStatement("CALL findCarBrand(?)");
            st.setString(1, ten_hieu_xe_txt.getText());
            ResultSet rs = st.executeQuery();
            DefaultTableModel model = (DefaultTableModel) hieu_xe.getModel();
            model.setRowCount(0);
            while (rs.next()){    
                Object objList[] = {rs.getString("MaHieuXe"), rs.getString("TenHieuXe")};
                model.addRow(objList);
            }
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }
    
    public void deleteWage() {
        try {
            int x = -1;
            x = tien_cong.getSelectedRow();
            if (x == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng cần xoá.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String matc = tien_cong.getValueAt(x, 0).toString();
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");     
            PreparedStatement st = conn.prepareStatement("CALL deleteWage(?)");
            st.setInt(1, Integer.parseInt(matc));
            st.executeUpdate();
            conn.close();
            JOptionPane.showMessageDialog(this, "Xoá tiền công thành công!");
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }
    public void deleteCarBrand() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");     
            PreparedStatement st = conn.prepareStatement("CALL deleteCarBrand(?)");
            st.setString(1, ten_hieu_xe_txt.getText());
            st.executeUpdate();
            conn.close();
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }
            
    public int insertWage() {
        Connection conn;
        PreparedStatement st;
        ResultSet rs;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "CALL insertWage(?,?)";
            st = conn.prepareCall(sql);
            st.setString(1, ten_tien_cong_txt.getText());
            st.setDouble(2, Double.parseDouble(gia_tien_cong_txt.getText()));
            st.executeQuery();
            rs = st.getGeneratedKeys();
            int generatedKey = 0;
            if (rs.next()) {
                generatedKey = rs.getInt(1);
            }
            st.close();
            conn.close();
            return generatedKey;
        } catch (NumberFormatException | SQLException ex) {
        }
        return 0;
    }
    
    public int insertCarBrand() {
        Connection conn;
        PreparedStatement st;
        ResultSet rs;
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "CALL insertCarBrand(?,?)";
            st = conn.prepareCall(sql);
            st.setString(1, ten_hieu_xe_txt.getText());
            st.setString(2, ten_hieu_xe_txt.getText());
            st.executeQuery();
            rs = st.getGeneratedKeys();
            int generatedKey = 0;
            if (rs.next()) {
                generatedKey = rs.getInt(1);
            }
            st.close();
            conn.close();
            return generatedKey;
        } catch (NumberFormatException | SQLException ex) {
        }
        return 0;
    }
    
    public void updateWage() {
        try {
            int x = -1;
            x = tien_cong.getSelectedRow();
            if (x == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hàng cần sửa.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String matc = tien_cong.getValueAt(x, 0).toString();
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");     
            PreparedStatement st = conn.prepareStatement("CALL updateWage(?,?,?)");
            st.setInt(1, Integer.parseInt(matc));
            st.setString(2, ten_tien_cong_txt.getText());
            st.setDouble(3, Double.parseDouble(gia_tien_cong_txt.getText()));
            st.executeUpdate();
            conn.close();
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }
    
    public void updateCarBrand() {
        try {
            
            int x = hieu_xe.getSelectedRow();
            String mahx = hieu_xe.getValueAt(x, 0).toString();
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");     
            PreparedStatement st = conn.prepareStatement("CALL updateCarBrand(?,?)");
            st.setInt(1, Integer.parseInt(mahx));
            st.setString(2, ten_hieu_xe_txt.getText());
            st.executeUpdate();
            conn.close();
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
        }
    }
    
    public int checkOverwrittenCarBrand(){
        try {
            int count = 0;
            Connection conn;
            PreparedStatement st;
            ResultSet rs;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "Call checkOverwrittenCarBrand(?)";
            st = conn.prepareStatement(sql);
            st.setString(1, ten_hieu_xe_txt.getText());
            rs = st.executeQuery();
            while (rs.next())
            {
                count = rs.getInt("DEM");
            }
            return count;
        } catch (SQLException ex) {
            Logger.getLogger(Form_6.class.getName()).log(Level.SEVERE, null, ex);
        }
        return -1;
    }
    
    public int checkOverwrittenWage(){
        try {
            int count = 0;
            Connection conn;
            PreparedStatement st;
            ResultSet rs;
            conn = DriverManager.getConnection("jdbc:mysql://localhost/garage_final", "root", "");
            String sql = "Call checkOverwrittenWage(?)";
            st = conn.prepareStatement(sql);
            st.setString(1, ten_tien_cong_txt.getText());
            rs = st.executeQuery();
            while (rs.next())
            {
                count = rs.getInt("DEM");
            }
            return count;
        } catch (SQLException ex) {
            Logger.getLogger(Form_6.class.getName()).log(Level.SEVERE, null, ex);
        }
        return -1;
    }
    
    public void GetSLTienCong() {
        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select GiaTri from v_soluongtiencong");
            if (rs.next()) {
                        // Lấy giá trị từ cột "column" trong kết quả truy vấn
                        String value = rs.getString("GiaTri");
                        
                        // Gán giá trị vào biến
                        slTienCong = Integer.valueOf(value);
                        
                        // Sử dụng biến
                        System.out.println("Giá trị của biến: " + slTienCong);
                    }
        } catch (SQLException ex) {
            Logger.getLogger(Form_1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void CheckSLXeSuaTrongNgay() {
        if(count_row > slTienCong) {
            JOptionPane.showMessageDialog(this, "Vượt quá số lượng xe sửa chữa trong ngày");
            return;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SuaHieuXe;
    private javax.swing.JButton SuaTC;
    private javax.swing.JButton ThemHieuXe;
    private javax.swing.JButton ThemTC;
    private javax.swing.JButton TimHieuXe;
    private javax.swing.JButton TimTC;
    private javax.swing.JButton XoaHieuXe;
    private javax.swing.JButton XoaTC;
    private javax.swing.JTextField gia_tien_cong_txt;
    private javax.swing.JTable hieu_xe;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField ten_hieu_xe_txt;
    private javax.swing.JTextField ten_tien_cong_txt;
    private javax.swing.JTable tien_cong;
    // End of variables declaration//GEN-END:variables
}
